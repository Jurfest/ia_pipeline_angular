name: GitHub Actions Demo
on:
  push:
    branches:
      - main

  pull_request:
    branches:
      - main

  schedule:
    # At 03:35 on Saturday
    - cron: '35 3 * * 6'

  workflow_dispatch:

jobs:
  Example-Actions-Job:
    name: Exploring GitHub Actions
    runs-on: ubuntu-latest
    steps:
      # Display the event that triggered the workflow
      - run: echo "The job was triggered by a ${{ github.event_name }} event."

      # Runner information
      - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub"

      # Information about the repository and branch
      - run: echo "The name of your branch is ${{ github.ref }} and your repository is ${{ github.repository }}."

      # Use Action located in https://github.com/actions
      - name: Check out repository code
        uses: actions/checkout@v3

      - run: echo "The ${{ github.repository }} repository has been cloned to the runner."

      - run: echo "Your repository has been copied to the path ${{ github.workspace }} on the runner."

      - run: echo "The workflow is now ready to test your code on the runner."

      - name: conditional step when event name is pull request
        if: ${{ github.event_name == 'pull_request' }}
        run: echo "This event is a pull request"

      - name: List files in the repository
        run: |
          ls ${{ github.workspace }}

      - name: Setup Node on runner
        uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install Dependencies
        run: yarn
      # - run: npm test

      - name: Build
        run: yarn run build --prod

      - name: Lint
        run: yarn run lint

      - name: Test
        run: yarn run test --single-run=true --progress=false

      - name: Display Angular version
        run: yarn run ng version

      # - name: Deploy Angular
      #   run: |
      #     npm run deploy
      #   env:
      #     GH_TOKEN: ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }}

      #
      # - name: Create Release
      #   uses: actions/create-release@v1
      #   if: ${{ steps.changelog.outputs.skipped == 'false' }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB_ACTION }}
      #   with:
      #     tag_name: ${{ steps.changelog.outputs.tag }}
      #     release_name: ${{ steps.changelog.outputs.tag }}
      #     body: ${{ steps.changelog.outputs.clean_changelog }}

      - run: echo "The preinstalled tools are located here on the runner ${{ runner.tool_cache }}."

      - name: List files in tool cache
        run: |
          ls ${{ runner.tool_cache }}

      - run: echo "This job's status is ${{ job.status }}."

  # Second-Job:
  #   name: The second job running on another runner
  #   runs-on: windows-latest
  #   needs: Example-Actions-Job
  #   steps:
  #     - run: echo "This job is now running on a ${{ runner.os }} server hosted by GitHub."
